problem : https://leetcode.com/explore/interview/card/top-interview-questions-easy/92/array/546


class Solution {
    public int[] twoSum(int[] nums, int target) {
        //sol-1 --> brute force
        
        for(int i=0;i<nums.length-1;++i){
            for(int j=i+1;j<nums.length;++j){
                if(nums[i]+nums[j]==target){
                   
                    return new int[]{i, j};
                }
            }
            
        }
        return null;
    }
    
    
    //sol-2 using map searching for j = target -i 
    1.  push elements to map
    2.  check for target-nums[i]
    3. if found push to result and return else return empty result
    
    class Solution {
    public int[] twoSum(int[] nums, int target) {
       int[] result = new int[2];
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
        for(int i=0;i< nums.length;i++){
            map.put(nums[i],i);
            if(map.containsKey(target - nums[i])){
                result[1] = i;
                result[0]= map.get(target - nums[i]);
                return result;
            }
           
        }
        return result;
    }
}
    
}
